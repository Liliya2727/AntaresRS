name: AZenith

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/build.yml"
      - ".github/scripts/**"
      - "mainfiles/**"
      - "preloadbin/**"
      - "cargo/**"
      - "webui/**"
      - "gamelist.txt"
      - "version"

concurrency:
  group: build
  cancel-in-progress: true

jobs:
  build:
    name: Build Flashable ZIP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Add ARCH Target
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi

      - name: Install cargo-ndk
        run: cargo install cargo-ndk

      - name: Install UPX
        run: sudo apt-get update && sudo apt-get install -y upx

      - name: Build Rust Daemon
        run: |
          cd ./cargo
          cargo ndk --target aarch64-linux-android build --release
          cargo ndk --target armv7-linux-androideabi build --release

          # Paths to your compiled binaries (adjust the name)
          ARM64=target/aarch64-linux-android/release/your-daemon-binary
          ARMV7=target/armv7-linux-androideabi/release/your-daemon-binary

          echo "Stripping binaries..."
          aarch64-linux-android-strip $ARM64
          arm-linux-androideabi-strip $ARMV7

          # Optional: compress with UPX if installed
          if command -v upx >/dev/null 2>&1; then
            echo "Compressing with UPX..."
            upx --best --lzma $ARM64
            upx --best --lzma $ARMV7
          else
            echo "UPX not installed, skipping..."
          fi

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2.0.2

      - name: Build WebRoots
        working-directory: ./webui
        run: |
          bun install
          bun run build
          cp -r ./dist/* ../mainfiles/webroot

      - name: Compile Flashable Zip
        id: compileZip
        run: bash .github/scripts/compile_zip.sh

      - name: Unzip AZenith Package
        run: |
          unzip ${{ steps.compileZip.outputs.zipName }} -d extracted

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ steps.compileZip.outputs.zipName }}
          path: extracted/**
